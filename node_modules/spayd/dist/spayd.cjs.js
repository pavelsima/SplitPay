'use strict';

var ibantools = require('ibantools');
var format = require('date-fns/format');
var isValid = require('date-fns/isValid');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var format__default = /*#__PURE__*/_interopDefaultLegacy(format);
var isValid__default = /*#__PURE__*/_interopDefaultLegacy(isValid);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var Key = /** @class */ (function () {
    function Key(name, value, structure) {
        this.name = name;
        this.value = value;
        this.structure = structure;
        if (this.structure && !this.isValid()) {
            throw 'The ' + this.name + ' key is in wrong format!';
        }
    }
    Key.prototype.isValid = function () {
        return this.structure.test(this.value);
    };
    Key.prototype.toString = function () {
        return this.name + ':' + this.value;
    };
    return Key;
}());
var Acc = /** @class */ (function (_super) {
    __extends(Acc, _super);
    function Acc(value) {
        var _this = _super.call(this, 'acc', value) || this;
        if (!_this.isValid()) {
            throw 'The ' + _this.name + ' key is in wrong format!';
        }
        return _this;
    }
    Acc.prototype.isValid = function () {
        var parts = this.value.split('+');
        if (parts.length === 1) {
            return ibantools.isValidIBAN(this.value);
        }
        else {
            return ibantools.isValidIBAN(parts[0]) && ibantools.isValidBIC(parts[1]);
        }
    };
    return Acc;
}(Key));
var AltAcc = /** @class */ (function (_super) {
    __extends(AltAcc, _super);
    function AltAcc(value) {
        var _this = _super.call(this, 'alt-acc', value.join(',')) || this;
        if (!_this.isValid()) {
            throw 'The ' + _this.name + ' key is in wrong format!';
        }
        return _this;
    }
    AltAcc.prototype.isValid = function () {
        var accs = this.value.split(',');
        return accs.every(function (value) {
            return new Acc(value).isValid();
        });
    };
    return AltAcc;
}(Key));
var Am = /** @class */ (function (_super) {
    __extends(Am, _super);
    function Am(value) {
        return _super.call(this, 'am', value, /^[1-9][0-9]*(\.[0-9][0-9])?$/) || this;
    }
    return Am;
}(Key));
var Cc = /** @class */ (function (_super) {
    __extends(Cc, _super);
    function Cc(value) {
        return _super.call(this, 'cc', value, /^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/) || this;
    }
    return Cc;
}(Key));
var Rf = /** @class */ (function (_super) {
    __extends(Rf, _super);
    function Rf(value) {
        return _super.call(this, 'rf', value, /^[0-9]{1,16}$/) || this;
    }
    return Rf;
}(Key));
var Rn = /** @class */ (function (_super) {
    __extends(Rn, _super);
    function Rn(value) {
        return _super.call(this, 'rn', value, /^[^*]{1,35}$/) || this;
    }
    return Rn;
}(Key));
var Dt = /** @class */ (function (_super) {
    __extends(Dt, _super);
    function Dt(value) {
        var _this = _super.call(this, 'dt', format__default['default'](value, 'yyyyMMdd')) || this;
        _this.originalDate = value;
        if (!_this.isValid()) {
            throw 'The ' + _this.name + ' key is in wrong format!';
        }
        return _this;
    }
    Dt.prototype.isValid = function () {
        return isValid__default['default'](this.originalDate);
    };
    return Dt;
}(Key));
var Pt = /** @class */ (function (_super) {
    __extends(Pt, _super);
    function Pt(value) {
        return _super.call(this, 'pt', value, /^[^*]{1,3}$/) || this;
    }
    return Pt;
}(Key));
var Msg = /** @class */ (function (_super) {
    __extends(Msg, _super);
    function Msg(value) {
        return _super.call(this, 'msg', value, /^[^*]{1,60}$/) || this;
    }
    return Msg;
}(Key));
var Crc32 = /** @class */ (function (_super) {
    __extends(Crc32, _super);
    function Crc32(value) {
        return _super.call(this, 'crc32', value, /^[A-F0-9]{8,8}$/) || this;
    }
    return Crc32;
}(Key));
var Xper = /** @class */ (function (_super) {
    __extends(Xper, _super);
    function Xper(value) {
        return _super.call(this, 'x-per', value, /^(30|[12]?[0-9])$/) || this;
    }
    return Xper;
}(Key));
var Xvs = /** @class */ (function (_super) {
    __extends(Xvs, _super);
    function Xvs(value) {
        return _super.call(this, 'x-vs', value, /^[1-9][0-9]{0,9}$/) || this;
    }
    return Xvs;
}(Key));
var Xss = /** @class */ (function (_super) {
    __extends(Xss, _super);
    function Xss(value) {
        return _super.call(this, 'x-ss', value, /^[1-9][0-9]{0,9}$/) || this;
    }
    return Xss;
}(Key));
var Xks = /** @class */ (function (_super) {
    __extends(Xks, _super);
    function Xks(value) {
        return _super.call(this, 'x-ks', value, /^[1-9][0-9]{0,9}$/) || this;
    }
    return Xks;
}(Key));
var Xid = /** @class */ (function (_super) {
    __extends(Xid, _super);
    function Xid(value) {
        return _super.call(this, 'x-id', value, /^[^*]{1,20}$/) || this;
    }
    return Xid;
}(Key));
var keyMap = {
    acc: Acc,
    altAcc: AltAcc,
    am: Am,
    cc: Cc,
    rf: Rf,
    rn: Rn,
    dt: Dt,
    pt: Pt,
    msg: Msg,
    crc32: Crc32,
    xper: Xper,
    xvs: Xvs,
    xss: Xss,
    xks: Xks,
    xid: Xid
};

function spayd(paymentDescription) {
    var header = 'SPD*1.0';
    var keys = [];
    for (var key in paymentDescription) {
        if (!keyMap[key]) {
            throw 'Was given an unsupported key: ' + key;
        }
        keys.push(new keyMap[key](paymentDescription[key]));
    }
    return header + "*" + keys.sort().join('*').toUpperCase();
}

module.exports = spayd;
//# sourceMappingURL=spayd.cjs.js.map
