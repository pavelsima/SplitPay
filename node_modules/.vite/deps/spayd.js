import {
  __commonJS
} from "./chunk-UNANNA3Z.js";

// node_modules/spayd/dist/spayd.umd.min.js
var require_spayd_umd_min = __commonJS({
  "node_modules/spayd/dist/spayd.umd.min.js"(exports, module) {
    !function(e, t) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = t() : typeof define == "function" && define.amd ? define(t) : (e = typeof globalThis != "undefined" ? globalThis : e || self).spayd = t();
    }(exports, function() {
      "use strict";
      var e, t, r = function(e2, t2) {
        return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, t3) {
          e3.__proto__ = t3;
        } || function(e3, t3) {
          for (var r2 in t3)
            Object.prototype.hasOwnProperty.call(t3, r2) && (e3[r2] = t3[r2]);
        })(e2, t2);
      };
      function n(e2, t2) {
        if (typeof t2 != "function" && t2 !== null)
          throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
        function n2() {
          this.constructor = e2;
        }
        r(e2, t2), e2.prototype = t2 === null ? Object.create(t2) : (n2.prototype = t2.prototype, new n2());
      }
      function a(e2) {
        if (e2 != null) {
          var t2 = new RegExp("^[0-9]{2}$", ""), r2 = i[e2.slice(0, 2)];
          if (r2 !== void 0 && r2.bban_regexp && r2.bban_regexp !== null && r2.chars && r2.chars === e2.length && t2.test(e2.slice(2, 4)) && (n2 = e2.slice(4), a2 = r2.bban_regexp, new RegExp(a2, "").test(n2)) && function(e3) {
            for (var t3 = parseInt(e3.slice(2, 4), 10), r3 = e3.slice(3) + e3.slice(0, 2) + "00", n3 = "", a3 = 1; a3 < r3.length; a3++) {
              var i2 = r3.charCodeAt(a3);
              n3 += i2 >= 65 ? (i2 - 55).toString() : r3[a3];
            }
            for (; n3.length > 2; ) {
              var o2 = n3.slice(0, 6);
              n3 = (parseInt(o2, 10) % 97).toString() + n3.slice(o2.length);
            }
            return 98 - parseInt(n3, 10) % 97 === t3;
          }(e2))
            return true;
        }
        var n2, a2;
        return false;
      }
      !function(e2) {
        e2[e2.NoIBANProvided = 0] = "NoIBANProvided", e2[e2.NoIBANCountry = 1] = "NoIBANCountry", e2[e2.WrongBBANLength = 2] = "WrongBBANLength", e2[e2.WrongBBANFormat = 3] = "WrongBBANFormat", e2[e2.ChecksumNotNumber = 4] = "ChecksumNotNumber", e2[e2.WrongIBANChecksum = 5] = "WrongIBANChecksum";
      }(e || (e = {})), function(e2) {
        e2[e2.NoBICProvided = 0] = "NoBICProvided", e2[e2.NoBICCountry = 1] = "NoBICCountry", e2[e2.WrongBICFormat = 2] = "WrongBICFormat";
      }(t || (t = {}));
      var i = { AD: { chars: 24, bban_regexp: "^[0-9]{8}[A-Z0-9]{12}$", IBANRegistry: true }, AE: { chars: 23, bban_regexp: "^[0-9]{3}[0-9]{16}$", IBANRegistry: true }, AF: {}, AG: {}, AI: {}, AL: { chars: 28, bban_regexp: "^[0-9]{8}[A-Z0-9]{16}$", IBANRegistry: true }, AM: {}, AO: { chars: 25, bban_regexp: "^[0-9]{21}$" }, AQ: {}, AR: {}, AS: {}, AT: { chars: 20, bban_regexp: "^[0-9]{16}$", IBANRegistry: true, SEPA: true }, AU: {}, AW: {}, AX: { chars: 18, bban_regexp: "^[0-9]{14}$", IBANRegistry: true }, AZ: { chars: 28, bban_regexp: "^[A-Z]{4}[A-Z0-9]{20}$", IBANRegistry: true }, BA: { chars: 20, bban_regexp: "^[0-9]{16}$", IBANRegistry: true }, BB: {}, BD: {}, BE: { chars: 16, bban_regexp: "^[0-9]{12}$", IBANRegistry: true, SEPA: true }, BF: { chars: 28, bban_regexp: "^[A-Z0-9]{2}[0-9]{22}$" }, BG: { chars: 22, bban_regexp: "^[A-Z]{4}[0-9]{6}[A-Z0-9]{8}$", IBANRegistry: true }, BH: { chars: 22, bban_regexp: "^[A-Z]{4}[A-Z0-9]{14}$", IBANRegistry: true }, BI: { chars: 16, bban_regexp: "^[0-9]{12}$" }, BJ: { chars: 28, bban_regexp: "^[A-Z0-9]{2}[0-9]{22}$" }, BL: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, BM: {}, BN: {}, BO: {}, BQ: {}, BR: { chars: 29, bban_regexp: "^[0-9]{23}[A-Z]{1}[A-Z0-9]{1}$", IBANRegistry: true }, BS: {}, BT: {}, BV: {}, BW: {}, BY: { chars: 28, bban_regexp: "^[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$", IBANRegistry: true }, BZ: {}, CA: {}, CC: {}, CD: {}, CF: { chars: 27, bban_regexp: "^[0-9]{23}$" }, CG: { chars: 27, bban_regexp: "^[0-9]{23}$" }, CH: { chars: 21, bban_regexp: "^[0-9]{5}[A-Z0-9]{12}$", IBANRegistry: true, SEPA: true }, CI: { chars: 28, bban_regexp: "^[A-Z]{1}[0-9]{23}$" }, CK: {}, CL: {}, CM: { chars: 27, bban_regexp: "^[0-9]{23}$" }, CN: {}, CO: {}, CR: { chars: 22, bban_regexp: "^[0-9]{18}$", IBANRegistry: true }, CU: {}, CV: { chars: 25, bban_regexp: "^[0-9]{21}$" }, CW: {}, CX: {}, CY: { chars: 28, bban_regexp: "^[0-9]{8}[A-Z0-9]{16}$", IBANRegistry: true, SEPA: true }, CZ: { chars: 24, bban_regexp: "^[0-9]{20}$", IBANRegistry: true, SEPA: true }, DE: { chars: 22, bban_regexp: "^[0-9]{18}$", IBANRegistry: true, SEPA: true }, DJ: { chars: 27, bban_regexp: "^[0-9]{23}$" }, DK: { chars: 18, bban_regexp: "^[0-9]{14}$", IBANRegistry: true, SEPA: true }, DM: {}, DO: { chars: 28, bban_regexp: "^[A-Z]{4}[0-9]{20}$", IBANRegistry: true }, DZ: { chars: 26, bban_regexp: "^[0-9]{22}$" }, EC: {}, EE: { chars: 20, bban_regexp: "^[0-9]{16}$", IBANRegistry: true, SEPA: true }, EG: { chars: 29, bban_regexp: "^[0-9]{25}", IBANRegistry: true }, EH: {}, ER: {}, ES: { chars: 24, bban_regexp: "^[0-9]{20}$", IBANRegistry: true, SEPA: true }, ET: {}, FI: { chars: 18, bban_regexp: "^[0-9]{14}$", IBANRegistry: true, SEPA: true }, FJ: {}, FK: {}, FM: {}, FO: { chars: 18, bban_regexp: "^[0-9]{14}$", IBANRegistry: true, SEPA: true }, FR: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true, SEPA: true }, GA: { chars: 27, bban_regexp: "^[0-9]{23}$" }, GB: { chars: 22, bban_regexp: "^[A-Z]{4}[0-9]{14}$", IBANRegistry: true, SEPA: true }, GD: {}, GE: { chars: 22, bban_regexp: "^[A-Z0-9]{2}[0-9]{16}$", IBANRegistry: true }, GF: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, GG: {}, GH: {}, GI: { chars: 23, bban_regexp: "^[A-Z]{4}[A-Z0-9]{15}$", IBANRegistry: true, SEPA: true }, GL: { chars: 18, bban_regexp: "^[0-9]{14}$", IBANRegistry: true, SEPA: true }, GM: {}, GN: {}, GP: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, GQ: { chars: 27, bban_regexp: "^[0-9]{23}$" }, GR: { chars: 27, bban_regexp: "^[0-9]{7}[A-Z0-9]{16}$", IBANRegistry: true, SEPA: true }, GS: {}, GT: { chars: 28, bban_regexp: "^[A-Z0-9]{24}$", IBANRegistry: true }, GU: {}, GW: { chars: 25, bban_regexp: "^[A-Z]{2}[0-9]{19}$" }, GY: {}, HK: {}, HM: {}, HN: { chars: 28, bban_regexp: "^[A-Z]{4}[0-9]{20}$" }, HR: { chars: 21, bban_regexp: "^[0-9]{17}$", IBANRegistry: true, SEPA: true }, HT: {}, HU: { chars: 28, bban_regexp: "^[0-9]{24}$", IBANRegistry: true, SEPA: true }, ID: {}, IE: { chars: 22, bban_regexp: "^[A-Z0-9]{4}[0-9]{14}$", IBANRegistry: true, SEPA: true }, IL: { chars: 23, bban_regexp: "^[0-9]{19}$", IBANRegistry: true }, IM: {}, IN: {}, IO: {}, IQ: { chars: 23, bban_regexp: "^[A-Z]{4}[0-9]{15}$", IBANRegistry: true }, IR: { chars: 26, bban_regexp: "^[0-9]{22}$" }, IS: { chars: 26, bban_regexp: "^[0-9]{22}$", IBANRegistry: true, SEPA: true }, IT: { chars: 27, bban_regexp: "^[A-Z]{1}[0-9]{10}[A-Z0-9]{12}$", IBANRegistry: true, SEPA: true }, JE: {}, JM: {}, JO: { chars: 30, bban_regexp: "^[A-Z]{4}[0-9]{4}[A-Z0-9]{18}$", IBANRegistry: true }, JP: {}, KE: {}, KG: {}, KH: {}, KI: {}, KM: { chars: 27, bban_regexp: "^[0-9]{23}$" }, KN: {}, KP: {}, KR: {}, KW: { chars: 30, bban_regexp: "^[A-Z]{4}[A-Z0-9]{22}$", IBANRegistry: true }, KY: {}, KZ: { chars: 20, bban_regexp: "^[0-9]{3}[A-Z0-9]{13}$", IBANRegistry: true }, LA: {}, LB: { chars: 28, bban_regexp: "^[0-9]{4}[A-Z0-9]{20}$", IBANRegistry: true }, LC: { chars: 32, bban_regexp: "^[A-Z]{4}[A-Z0-9]{24}$", IBANRegistry: true }, LI: { chars: 21, bban_regexp: "^[0-9]{5}[A-Z0-9]{12}$", IBANRegistry: true, SEPA: true }, LK: {}, LR: {}, LS: {}, LT: { chars: 20, bban_regexp: "^[0-9]{16}$", IBANRegistry: true, SEPA: true }, LU: { chars: 20, bban_regexp: "^[0-9]{3}[A-Z0-9]{13}$", IBANRegistry: true, SEPA: true }, LV: { chars: 21, bban_regexp: "^[A-Z]{4}[A-Z0-9]{13}$", IBANRegistry: true, SEPA: true }, LY: { chars: 25, bban_regexp: "^[0-9]{21}$", IBANRegistry: true }, MA: { chars: 28, bban_regexp: "^[0-9]{24}$" }, MC: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true, SEPA: true }, MD: { chars: 24, bban_regexp: "^[A-Z0-9]{2}[A-Z0-9]{18}$", IBANRegistry: true }, ME: { chars: 22, bban_regexp: "^[0-9]{18}$", IBANRegistry: true }, MF: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, MG: { chars: 27, bban_regexp: "^[0-9]{23}$" }, MH: {}, MK: { chars: 19, bban_regexp: "^[0-9]{3}[A-Z0-9]{10}[0-9]{2}$", IBANRegistry: true }, ML: { chars: 28, bban_regexp: "^[A-Z0-9]{2}[0-9]{22}$" }, MM: {}, MN: {}, MO: {}, MP: {}, MQ: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, MR: { chars: 27, bban_regexp: "^[0-9]{23}$", IBANRegistry: true }, MS: {}, MT: { chars: 31, bban_regexp: "^[A-Z]{4}[0-9]{5}[A-Z0-9]{18}$", IBANRegistry: true, SEPA: true }, MU: { chars: 30, bban_regexp: "^[A-Z]{4}[0-9]{19}[A-Z]{3}$", IBANRegistry: true }, MV: {}, MW: {}, MX: {}, MY: {}, MZ: { chars: 25, bban_regexp: "^[0-9]{21}$" }, NA: {}, NC: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, NE: { chars: 28, bban_regexp: "^[A-Z]{2}[0-9]{22}$" }, NF: {}, NG: {}, NI: { chars: 32, bban_regexp: "^[A-Z]{4}[0-9]{24}$" }, NL: { chars: 18, bban_regexp: "^[A-Z]{4}[0-9]{10}$", IBANRegistry: true, SEPA: true }, NO: { chars: 15, bban_regexp: "^[0-9]{11}$", IBANRegistry: true, SEPA: true }, NP: {}, NR: {}, NU: {}, NZ: {}, OM: {}, PA: {}, PE: {}, PF: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, PG: {}, PH: {}, PK: { chars: 24, bban_regexp: "^[A-Z0-9]{4}[0-9]{16}$", IBANRegistry: true }, PL: { chars: 28, bban_regexp: "^[0-9]{24}$", IBANRegistry: true, SEPA: true }, PM: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, PN: {}, PR: {}, PS: { chars: 29, bban_regexp: "^[A-Z0-9]{4}[0-9]{21}$", IBANRegistry: true }, PT: { chars: 25, bban_regexp: "^[0-9]{21}$", IBANRegistry: true, SEPA: true }, PW: {}, PY: {}, QA: { chars: 29, bban_regexp: "^[A-Z]{4}[A-Z0-9]{21}$", IBANRegistry: true }, RE: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, RO: { chars: 24, bban_regexp: "^[A-Z]{4}[A-Z0-9]{16}$", IBANRegistry: true, SEPA: true }, RS: { chars: 22, bban_regexp: "^[0-9]{18}$", IBANRegistry: true }, RU: {}, RW: {}, SA: { chars: 24, bban_regexp: "^[0-9]{2}[A-Z0-9]{18}$", IBANRegistry: true }, SB: {}, SC: { chars: 31, bban_regexp: "^[A-Z]{4}[0-9]{20}[A-Z]{3}$", IBANRegistry: true }, SD: {}, SE: { chars: 24, bban_regexp: "^[0-9]{20}$", IBANRegistry: true, SEPA: true }, SG: {}, SH: {}, SI: { chars: 19, bban_regexp: "^[0-9]{15}$", IBANRegistry: true, SEPA: true }, SJ: {}, SK: { chars: 24, bban_regexp: "^[0-9]{20}$", IBANRegistry: true, SEPA: true }, SL: {}, SM: { chars: 27, bban_regexp: "^[A-Z]{1}[0-9]{10}[A-Z0-9]{12}$", IBANRegistry: true, SEPA: true }, SN: { chars: 28, bban_regexp: "^[A-Z]{1}[0-9]{23}$" }, SO: {}, SR: {}, SS: {}, ST: { chars: 25, bban_regexp: "^[0-9]{21}$", IBANRegistry: true }, SV: { chars: 28, bban_regexp: "^[A-Z]{4}[0-9]{20}$", IBANRegistry: true }, SX: {}, SY: {}, SZ: {}, TC: {}, TD: { chars: 27, bban_regexp: "^[0-9]{23}$" }, TF: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, TG: { chars: 28, bban_regexp: "^[A-Z]{2}[0-9]{22}$" }, TH: {}, TJ: {}, TK: {}, TL: { chars: 23, bban_regexp: "^[0-9]{19}$", IBANRegistry: true }, TM: {}, TN: { chars: 24, bban_regexp: "^[0-9]{20}$", IBANRegistry: true }, TO: {}, TR: { chars: 26, bban_regexp: "^[0-9]{5}[A-Z0-9]{17}$", IBANRegistry: true }, TT: {}, TV: {}, TW: {}, TZ: {}, UA: { chars: 29, bban_regexp: "^[0-9]{6}[A-Z0-9]{19}$", IBANRegistry: true }, UG: {}, UM: {}, US: {}, UY: {}, UZ: {}, VA: { chars: 22, bban_regexp: "^[0-9]{18}", IBANRegistry: true }, VC: {}, VE: {}, VG: { chars: 24, bban_regexp: "^[A-Z0-9]{4}[0-9]{16}$", IBANRegistry: true }, VI: {}, VN: {}, VU: {}, WF: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, WS: {}, XK: { chars: 20, bban_regexp: "^[0-9]{16}$", IBANRegistry: true }, YE: {}, YT: { chars: 27, bban_regexp: "^[0-9]{10}[A-Z0-9]{11}[0-9]{2}$", IBANRegistry: true }, ZA: {}, ZM: {}, ZW: {} };
      function o(e2, t2) {
        if (t2.length < e2)
          throw new TypeError(e2 + " argument" + (e2 > 1 ? "s" : "") + " required, but only " + t2.length + " present");
      }
      function s(e2) {
        o(1, arguments);
        var t2 = Object.prototype.toString.call(e2);
        return e2 instanceof Date || typeof e2 == "object" && t2 === "[object Date]" ? new Date(e2.getTime()) : typeof e2 == "number" || t2 === "[object Number]" ? new Date(e2) : (typeof e2 != "string" && t2 !== "[object String]" || typeof console == "undefined" || (console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"), console.warn(new Error().stack)), new Date(NaN));
      }
      function u(e2) {
        o(1, arguments);
        var t2 = s(e2);
        return !isNaN(t2);
      }
      var c = { lessThanXSeconds: { one: "less than a second", other: "less than {{count}} seconds" }, xSeconds: { one: "1 second", other: "{{count}} seconds" }, halfAMinute: "half a minute", lessThanXMinutes: { one: "less than a minute", other: "less than {{count}} minutes" }, xMinutes: { one: "1 minute", other: "{{count}} minutes" }, aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" }, xHours: { one: "1 hour", other: "{{count}} hours" }, xDays: { one: "1 day", other: "{{count}} days" }, aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" }, xWeeks: { one: "1 week", other: "{{count}} weeks" }, aboutXMonths: { one: "about 1 month", other: "about {{count}} months" }, xMonths: { one: "1 month", other: "{{count}} months" }, aboutXYears: { one: "about 1 year", other: "about {{count}} years" }, xYears: { one: "1 year", other: "{{count}} years" }, overXYears: { one: "over 1 year", other: "over {{count}} years" }, almostXYears: { one: "almost 1 year", other: "almost {{count}} years" } };
      function h(e2) {
        return function(t2) {
          var r2 = t2 || {}, n2 = r2.width ? String(r2.width) : e2.defaultWidth;
          return e2.formats[n2] || e2.formats[e2.defaultWidth];
        };
      }
      var g = { date: h({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: h({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: h({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) }, d = { lastWeek: "'last' eeee 'at' p", yesterday: "'yesterday at' p", today: "'today at' p", tomorrow: "'tomorrow at' p", nextWeek: "eeee 'at' p", other: "P" };
      function l(e2) {
        return function(t2, r2) {
          var n2, a2 = r2 || {};
          if ((a2.context ? String(a2.context) : "standalone") === "formatting" && e2.formattingValues) {
            var i2 = e2.defaultFormattingWidth || e2.defaultWidth, o2 = a2.width ? String(a2.width) : i2;
            n2 = e2.formattingValues[o2] || e2.formattingValues[i2];
          } else {
            var s2 = e2.defaultWidth, u2 = a2.width ? String(a2.width) : e2.defaultWidth;
            n2 = e2.values[u2] || e2.values[s2];
          }
          return n2[e2.argumentCallback ? e2.argumentCallback(t2) : t2];
        };
      }
      function b(e2) {
        return function(t2, r2) {
          var n2 = String(t2), a2 = r2 || {}, i2 = a2.width, o2 = i2 && e2.matchPatterns[i2] || e2.matchPatterns[e2.defaultMatchWidth], s2 = n2.match(o2);
          if (!s2)
            return null;
          var u2, c2 = s2[0], h2 = i2 && e2.parsePatterns[i2] || e2.parsePatterns[e2.defaultParseWidth];
          return u2 = Object.prototype.toString.call(h2) === "[object Array]" ? function(e3, t3) {
            for (var r3 = 0; r3 < e3.length; r3++)
              if (t3(e3[r3]))
                return r3;
          }(h2, function(e3) {
            return e3.test(c2);
          }) : function(e3, t3) {
            for (var r3 in e3)
              if (e3.hasOwnProperty(r3) && t3(e3[r3]))
                return r3;
          }(h2, function(e3) {
            return e3.test(c2);
          }), u2 = e2.valueCallback ? e2.valueCallback(u2) : u2, { value: u2 = a2.valueCallback ? a2.valueCallback(u2) : u2, rest: n2.slice(c2.length) };
        };
      }
      var f, m = { code: "en-US", formatDistance: function(e2, t2, r2) {
        var n2;
        return r2 = r2 || {}, n2 = typeof c[e2] == "string" ? c[e2] : t2 === 1 ? c[e2].one : c[e2].other.replace("{{count}}", t2), r2.addSuffix ? r2.comparison > 0 ? "in " + n2 : n2 + " ago" : n2;
      }, formatLong: g, formatRelative: function(e2, t2, r2, n2) {
        return d[e2];
      }, localize: { ordinalNumber: function(e2, t2) {
        var r2 = Number(e2), n2 = r2 % 100;
        if (n2 > 20 || n2 < 10)
          switch (n2 % 10) {
            case 1:
              return r2 + "st";
            case 2:
              return r2 + "nd";
            case 3:
              return r2 + "rd";
          }
        return r2 + "th";
      }, era: l({ values: { narrow: ["B", "A"], abbreviated: ["BC", "AD"], wide: ["Before Christ", "Anno Domini"] }, defaultWidth: "wide" }), quarter: l({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"] }, defaultWidth: "wide", argumentCallback: function(e2) {
        return Number(e2) - 1;
      } }), month: l({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, defaultWidth: "wide" }), day: l({ values: { narrow: ["S", "M", "T", "W", "T", "F", "S"], short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, defaultWidth: "wide" }), dayPeriod: l({ values: { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" } }, defaultFormattingWidth: "wide" }) }, match: { ordinalNumber: (f = { matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: function(e2) {
        return parseInt(e2, 10);
      } }, function(e2, t2) {
        var r2 = String(e2), n2 = t2 || {}, a2 = r2.match(f.matchPattern);
        if (!a2)
          return null;
        var i2 = a2[0], o2 = r2.match(f.parsePattern);
        if (!o2)
          return null;
        var s2 = f.valueCallback ? f.valueCallback(o2[0]) : o2[0];
        return { value: s2 = n2.valueCallback ? n2.valueCallback(s2) : s2, rest: r2.slice(i2.length) };
      }), era: b({ matchPatterns: { narrow: /^(b|a)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(before christ|before common era|anno domini|common era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(a|c)/i] }, defaultParseWidth: "any" }), quarter: b({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](th|st|nd|rd)? quarter/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: function(e2) {
        return e2 + 1;
      } }), month: b({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i, wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: b({ matchPatterns: { narrow: /^[smtwf]/i, short: /^(su|mo|tu|we|th|fr|sa)/i, abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i, wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: b({ matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } }, defaultParseWidth: "any" }) }, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } };
      function A(e2) {
        if (e2 === null || e2 === true || e2 === false)
          return NaN;
        var t2 = Number(e2);
        return isNaN(t2) ? t2 : t2 < 0 ? Math.ceil(t2) : Math.floor(t2);
      }
      function p(e2, t2) {
        o(2, arguments);
        var r2 = s(e2).getTime(), n2 = A(t2);
        return new Date(r2 + n2);
      }
      function y(e2, t2) {
        o(2, arguments);
        var r2 = A(t2);
        return p(e2, -r2);
      }
      function w(e2, t2) {
        for (var r2 = e2 < 0 ? "-" : "", n2 = Math.abs(e2).toString(); n2.length < t2; )
          n2 = "0" + n2;
        return r2 + n2;
      }
      var x = function(e2, t2) {
        var r2 = e2.getUTCFullYear(), n2 = r2 > 0 ? r2 : 1 - r2;
        return w(t2 === "yy" ? n2 % 100 : n2, t2.length);
      }, N = function(e2, t2) {
        var r2 = e2.getUTCMonth();
        return t2 === "M" ? String(r2 + 1) : w(r2 + 1, 2);
      }, v = function(e2, t2) {
        return w(e2.getUTCDate(), t2.length);
      }, B = function(e2, t2) {
        return w(e2.getUTCHours() % 12 || 12, t2.length);
      }, R = function(e2, t2) {
        return w(e2.getUTCHours(), t2.length);
      }, P = function(e2, t2) {
        return w(e2.getUTCMinutes(), t2.length);
      }, S = function(e2, t2) {
        return w(e2.getUTCSeconds(), t2.length);
      }, T = function(e2, t2) {
        var r2 = t2.length, n2 = e2.getUTCMilliseconds();
        return w(Math.floor(n2 * Math.pow(10, r2 - 3)), t2.length);
      }, M = 864e5;
      function C(e2) {
        o(1, arguments);
        var t2 = 1, r2 = s(e2), n2 = r2.getUTCDay(), a2 = (n2 < t2 ? 7 : 0) + n2 - t2;
        return r2.setUTCDate(r2.getUTCDate() - a2), r2.setUTCHours(0, 0, 0, 0), r2;
      }
      function I(e2) {
        o(1, arguments);
        var t2 = s(e2), r2 = t2.getUTCFullYear(), n2 = new Date(0);
        n2.setUTCFullYear(r2 + 1, 0, 4), n2.setUTCHours(0, 0, 0, 0);
        var a2 = C(n2), i2 = new Date(0);
        i2.setUTCFullYear(r2, 0, 4), i2.setUTCHours(0, 0, 0, 0);
        var u2 = C(i2);
        return t2.getTime() >= a2.getTime() ? r2 + 1 : t2.getTime() >= u2.getTime() ? r2 : r2 - 1;
      }
      function _(e2) {
        o(1, arguments);
        var t2 = I(e2), r2 = new Date(0);
        r2.setUTCFullYear(t2, 0, 4), r2.setUTCHours(0, 0, 0, 0);
        var n2 = C(r2);
        return n2;
      }
      var D = 6048e5;
      function $(e2, t2) {
        o(1, arguments);
        var r2 = t2 || {}, n2 = r2.locale, a2 = n2 && n2.options && n2.options.weekStartsOn, i2 = a2 == null ? 0 : A(a2), u2 = r2.weekStartsOn == null ? i2 : A(r2.weekStartsOn);
        if (!(u2 >= 0 && u2 <= 6))
          throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
        var c2 = s(e2), h2 = c2.getUTCDay(), g2 = (h2 < u2 ? 7 : 0) + h2 - u2;
        return c2.setUTCDate(c2.getUTCDate() - g2), c2.setUTCHours(0, 0, 0, 0), c2;
      }
      function E(e2, t2) {
        o(1, arguments);
        var r2 = s(e2, t2), n2 = r2.getUTCFullYear(), a2 = t2 || {}, i2 = a2.locale, u2 = i2 && i2.options && i2.options.firstWeekContainsDate, c2 = u2 == null ? 1 : A(u2), h2 = a2.firstWeekContainsDate == null ? c2 : A(a2.firstWeekContainsDate);
        if (!(h2 >= 1 && h2 <= 7))
          throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
        var g2 = new Date(0);
        g2.setUTCFullYear(n2 + 1, 0, h2), g2.setUTCHours(0, 0, 0, 0);
        var d2 = $(g2, t2), l2 = new Date(0);
        l2.setUTCFullYear(n2, 0, h2), l2.setUTCHours(0, 0, 0, 0);
        var b2 = $(l2, t2);
        return r2.getTime() >= d2.getTime() ? n2 + 1 : r2.getTime() >= b2.getTime() ? n2 : n2 - 1;
      }
      function Z(e2, t2) {
        o(1, arguments);
        var r2 = t2 || {}, n2 = r2.locale, a2 = n2 && n2.options && n2.options.firstWeekContainsDate, i2 = a2 == null ? 1 : A(a2), s2 = r2.firstWeekContainsDate == null ? i2 : A(r2.firstWeekContainsDate), u2 = E(e2, t2), c2 = new Date(0);
        c2.setUTCFullYear(u2, 0, s2), c2.setUTCHours(0, 0, 0, 0);
        var h2 = $(c2, t2);
        return h2;
      }
      var U = 6048e5;
      var W = "midnight", G = "noon", O = "morning", k = "afternoon", Y = "evening", L = "night", F = { G: function(e2, t2, r2) {
        var n2 = e2.getUTCFullYear() > 0 ? 1 : 0;
        switch (t2) {
          case "G":
          case "GG":
          case "GGG":
            return r2.era(n2, { width: "abbreviated" });
          case "GGGGG":
            return r2.era(n2, { width: "narrow" });
          case "GGGG":
          default:
            return r2.era(n2, { width: "wide" });
        }
      }, y: function(e2, t2, r2) {
        if (t2 === "yo") {
          var n2 = e2.getUTCFullYear(), a2 = n2 > 0 ? n2 : 1 - n2;
          return r2.ordinalNumber(a2, { unit: "year" });
        }
        return x(e2, t2);
      }, Y: function(e2, t2, r2, n2) {
        var a2 = E(e2, n2), i2 = a2 > 0 ? a2 : 1 - a2;
        return t2 === "YY" ? w(i2 % 100, 2) : t2 === "Yo" ? r2.ordinalNumber(i2, { unit: "year" }) : w(i2, t2.length);
      }, R: function(e2, t2) {
        return w(I(e2), t2.length);
      }, u: function(e2, t2) {
        return w(e2.getUTCFullYear(), t2.length);
      }, Q: function(e2, t2, r2) {
        var n2 = Math.ceil((e2.getUTCMonth() + 1) / 3);
        switch (t2) {
          case "Q":
            return String(n2);
          case "QQ":
            return w(n2, 2);
          case "Qo":
            return r2.ordinalNumber(n2, { unit: "quarter" });
          case "QQQ":
            return r2.quarter(n2, { width: "abbreviated", context: "formatting" });
          case "QQQQQ":
            return r2.quarter(n2, { width: "narrow", context: "formatting" });
          case "QQQQ":
          default:
            return r2.quarter(n2, { width: "wide", context: "formatting" });
        }
      }, q: function(e2, t2, r2) {
        var n2 = Math.ceil((e2.getUTCMonth() + 1) / 3);
        switch (t2) {
          case "q":
            return String(n2);
          case "qq":
            return w(n2, 2);
          case "qo":
            return r2.ordinalNumber(n2, { unit: "quarter" });
          case "qqq":
            return r2.quarter(n2, { width: "abbreviated", context: "standalone" });
          case "qqqqq":
            return r2.quarter(n2, { width: "narrow", context: "standalone" });
          case "qqqq":
          default:
            return r2.quarter(n2, { width: "wide", context: "standalone" });
        }
      }, M: function(e2, t2, r2) {
        var n2 = e2.getUTCMonth();
        switch (t2) {
          case "M":
          case "MM":
            return N(e2, t2);
          case "Mo":
            return r2.ordinalNumber(n2 + 1, { unit: "month" });
          case "MMM":
            return r2.month(n2, { width: "abbreviated", context: "formatting" });
          case "MMMMM":
            return r2.month(n2, { width: "narrow", context: "formatting" });
          case "MMMM":
          default:
            return r2.month(n2, { width: "wide", context: "formatting" });
        }
      }, L: function(e2, t2, r2) {
        var n2 = e2.getUTCMonth();
        switch (t2) {
          case "L":
            return String(n2 + 1);
          case "LL":
            return w(n2 + 1, 2);
          case "Lo":
            return r2.ordinalNumber(n2 + 1, { unit: "month" });
          case "LLL":
            return r2.month(n2, { width: "abbreviated", context: "standalone" });
          case "LLLLL":
            return r2.month(n2, { width: "narrow", context: "standalone" });
          case "LLLL":
          default:
            return r2.month(n2, { width: "wide", context: "standalone" });
        }
      }, w: function(e2, t2, r2, n2) {
        var a2 = function(e3, t3) {
          o(1, arguments);
          var r3 = s(e3), n3 = $(r3, t3).getTime() - Z(r3, t3).getTime();
          return Math.round(n3 / U) + 1;
        }(e2, n2);
        return t2 === "wo" ? r2.ordinalNumber(a2, { unit: "week" }) : w(a2, t2.length);
      }, I: function(e2, t2, r2) {
        var n2 = function(e3) {
          o(1, arguments);
          var t3 = s(e3), r3 = C(t3).getTime() - _(t3).getTime();
          return Math.round(r3 / D) + 1;
        }(e2);
        return t2 === "Io" ? r2.ordinalNumber(n2, { unit: "week" }) : w(n2, t2.length);
      }, d: function(e2, t2, r2) {
        return t2 === "do" ? r2.ordinalNumber(e2.getUTCDate(), { unit: "date" }) : v(e2, t2);
      }, D: function(e2, t2, r2) {
        var n2 = function(e3) {
          o(1, arguments);
          var t3 = s(e3), r3 = t3.getTime();
          t3.setUTCMonth(0, 1), t3.setUTCHours(0, 0, 0, 0);
          var n3 = t3.getTime(), a2 = r3 - n3;
          return Math.floor(a2 / M) + 1;
        }(e2);
        return t2 === "Do" ? r2.ordinalNumber(n2, { unit: "dayOfYear" }) : w(n2, t2.length);
      }, E: function(e2, t2, r2) {
        var n2 = e2.getUTCDay();
        switch (t2) {
          case "E":
          case "EE":
          case "EEE":
            return r2.day(n2, { width: "abbreviated", context: "formatting" });
          case "EEEEE":
            return r2.day(n2, { width: "narrow", context: "formatting" });
          case "EEEEEE":
            return r2.day(n2, { width: "short", context: "formatting" });
          case "EEEE":
          default:
            return r2.day(n2, { width: "wide", context: "formatting" });
        }
      }, e: function(e2, t2, r2, n2) {
        var a2 = e2.getUTCDay(), i2 = (a2 - n2.weekStartsOn + 8) % 7 || 7;
        switch (t2) {
          case "e":
            return String(i2);
          case "ee":
            return w(i2, 2);
          case "eo":
            return r2.ordinalNumber(i2, { unit: "day" });
          case "eee":
            return r2.day(a2, { width: "abbreviated", context: "formatting" });
          case "eeeee":
            return r2.day(a2, { width: "narrow", context: "formatting" });
          case "eeeeee":
            return r2.day(a2, { width: "short", context: "formatting" });
          case "eeee":
          default:
            return r2.day(a2, { width: "wide", context: "formatting" });
        }
      }, c: function(e2, t2, r2, n2) {
        var a2 = e2.getUTCDay(), i2 = (a2 - n2.weekStartsOn + 8) % 7 || 7;
        switch (t2) {
          case "c":
            return String(i2);
          case "cc":
            return w(i2, t2.length);
          case "co":
            return r2.ordinalNumber(i2, { unit: "day" });
          case "ccc":
            return r2.day(a2, { width: "abbreviated", context: "standalone" });
          case "ccccc":
            return r2.day(a2, { width: "narrow", context: "standalone" });
          case "cccccc":
            return r2.day(a2, { width: "short", context: "standalone" });
          case "cccc":
          default:
            return r2.day(a2, { width: "wide", context: "standalone" });
        }
      }, i: function(e2, t2, r2) {
        var n2 = e2.getUTCDay(), a2 = n2 === 0 ? 7 : n2;
        switch (t2) {
          case "i":
            return String(a2);
          case "ii":
            return w(a2, t2.length);
          case "io":
            return r2.ordinalNumber(a2, { unit: "day" });
          case "iii":
            return r2.day(n2, { width: "abbreviated", context: "formatting" });
          case "iiiii":
            return r2.day(n2, { width: "narrow", context: "formatting" });
          case "iiiiii":
            return r2.day(n2, { width: "short", context: "formatting" });
          case "iiii":
          default:
            return r2.day(n2, { width: "wide", context: "formatting" });
        }
      }, a: function(e2, t2, r2) {
        var n2 = e2.getUTCHours() / 12 >= 1 ? "pm" : "am";
        switch (t2) {
          case "a":
          case "aa":
            return r2.dayPeriod(n2, { width: "abbreviated", context: "formatting" });
          case "aaa":
            return r2.dayPeriod(n2, { width: "abbreviated", context: "formatting" }).toLowerCase();
          case "aaaaa":
            return r2.dayPeriod(n2, { width: "narrow", context: "formatting" });
          case "aaaa":
          default:
            return r2.dayPeriod(n2, { width: "wide", context: "formatting" });
        }
      }, b: function(e2, t2, r2) {
        var n2, a2 = e2.getUTCHours();
        switch (n2 = a2 === 12 ? G : a2 === 0 ? W : a2 / 12 >= 1 ? "pm" : "am", t2) {
          case "b":
          case "bb":
            return r2.dayPeriod(n2, { width: "abbreviated", context: "formatting" });
          case "bbb":
            return r2.dayPeriod(n2, { width: "abbreviated", context: "formatting" }).toLowerCase();
          case "bbbbb":
            return r2.dayPeriod(n2, { width: "narrow", context: "formatting" });
          case "bbbb":
          default:
            return r2.dayPeriod(n2, { width: "wide", context: "formatting" });
        }
      }, B: function(e2, t2, r2) {
        var n2, a2 = e2.getUTCHours();
        switch (n2 = a2 >= 17 ? Y : a2 >= 12 ? k : a2 >= 4 ? O : L, t2) {
          case "B":
          case "BB":
          case "BBB":
            return r2.dayPeriod(n2, { width: "abbreviated", context: "formatting" });
          case "BBBBB":
            return r2.dayPeriod(n2, { width: "narrow", context: "formatting" });
          case "BBBB":
          default:
            return r2.dayPeriod(n2, { width: "wide", context: "formatting" });
        }
      }, h: function(e2, t2, r2) {
        if (t2 === "ho") {
          var n2 = e2.getUTCHours() % 12;
          return n2 === 0 && (n2 = 12), r2.ordinalNumber(n2, { unit: "hour" });
        }
        return B(e2, t2);
      }, H: function(e2, t2, r2) {
        return t2 === "Ho" ? r2.ordinalNumber(e2.getUTCHours(), { unit: "hour" }) : R(e2, t2);
      }, K: function(e2, t2, r2) {
        var n2 = e2.getUTCHours() % 12;
        return t2 === "Ko" ? r2.ordinalNumber(n2, { unit: "hour" }) : w(n2, t2.length);
      }, k: function(e2, t2, r2) {
        var n2 = e2.getUTCHours();
        return n2 === 0 && (n2 = 24), t2 === "ko" ? r2.ordinalNumber(n2, { unit: "hour" }) : w(n2, t2.length);
      }, m: function(e2, t2, r2) {
        return t2 === "mo" ? r2.ordinalNumber(e2.getUTCMinutes(), { unit: "minute" }) : P(e2, t2);
      }, s: function(e2, t2, r2) {
        return t2 === "so" ? r2.ordinalNumber(e2.getUTCSeconds(), { unit: "second" }) : S(e2, t2);
      }, S: function(e2, t2) {
        return T(e2, t2);
      }, X: function(e2, t2, r2, n2) {
        var a2 = (n2._originalDate || e2).getTimezoneOffset();
        if (a2 === 0)
          return "Z";
        switch (t2) {
          case "X":
            return K(a2);
          case "XXXX":
          case "XX":
            return X(a2);
          case "XXXXX":
          case "XXX":
          default:
            return X(a2, ":");
        }
      }, x: function(e2, t2, r2, n2) {
        var a2 = (n2._originalDate || e2).getTimezoneOffset();
        switch (t2) {
          case "x":
            return K(a2);
          case "xxxx":
          case "xx":
            return X(a2);
          case "xxxxx":
          case "xxx":
          default:
            return X(a2, ":");
        }
      }, O: function(e2, t2, r2, n2) {
        var a2 = (n2._originalDate || e2).getTimezoneOffset();
        switch (t2) {
          case "O":
          case "OO":
          case "OOO":
            return "GMT" + H(a2, ":");
          case "OOOO":
          default:
            return "GMT" + X(a2, ":");
        }
      }, z: function(e2, t2, r2, n2) {
        var a2 = (n2._originalDate || e2).getTimezoneOffset();
        switch (t2) {
          case "z":
          case "zz":
          case "zzz":
            return "GMT" + H(a2, ":");
          case "zzzz":
          default:
            return "GMT" + X(a2, ":");
        }
      }, t: function(e2, t2, r2, n2) {
        var a2 = n2._originalDate || e2;
        return w(Math.floor(a2.getTime() / 1e3), t2.length);
      }, T: function(e2, t2, r2, n2) {
        return w((n2._originalDate || e2).getTime(), t2.length);
      } };
      function H(e2, t2) {
        var r2 = e2 > 0 ? "-" : "+", n2 = Math.abs(e2), a2 = Math.floor(n2 / 60), i2 = n2 % 60;
        if (i2 === 0)
          return r2 + String(a2);
        var o2 = t2 || "";
        return r2 + String(a2) + o2 + w(i2, 2);
      }
      function K(e2, t2) {
        return e2 % 60 == 0 ? (e2 > 0 ? "-" : "+") + w(Math.abs(e2) / 60, 2) : X(e2, t2);
      }
      function X(e2, t2) {
        var r2 = t2 || "", n2 = e2 > 0 ? "-" : "+", a2 = Math.abs(e2);
        return n2 + w(Math.floor(a2 / 60), 2) + r2 + w(a2 % 60, 2);
      }
      function q(e2, t2) {
        switch (e2) {
          case "P":
            return t2.date({ width: "short" });
          case "PP":
            return t2.date({ width: "medium" });
          case "PPP":
            return t2.date({ width: "long" });
          case "PPPP":
          default:
            return t2.date({ width: "full" });
        }
      }
      function V(e2, t2) {
        switch (e2) {
          case "p":
            return t2.time({ width: "short" });
          case "pp":
            return t2.time({ width: "medium" });
          case "ppp":
            return t2.time({ width: "long" });
          case "pppp":
          default:
            return t2.time({ width: "full" });
        }
      }
      var Q = { p: V, P: function(e2, t2) {
        var r2, n2 = e2.match(/(P+)(p+)?/), a2 = n2[1], i2 = n2[2];
        if (!i2)
          return q(e2, t2);
        switch (a2) {
          case "P":
            r2 = t2.dateTime({ width: "short" });
            break;
          case "PP":
            r2 = t2.dateTime({ width: "medium" });
            break;
          case "PPP":
            r2 = t2.dateTime({ width: "long" });
            break;
          case "PPPP":
          default:
            r2 = t2.dateTime({ width: "full" });
        }
        return r2.replace("{{date}}", q(a2, t2)).replace("{{time}}", V(i2, t2));
      } };
      function j(e2) {
        var t2 = new Date(Date.UTC(e2.getFullYear(), e2.getMonth(), e2.getDate(), e2.getHours(), e2.getMinutes(), e2.getSeconds(), e2.getMilliseconds()));
        return t2.setUTCFullYear(e2.getFullYear()), e2.getTime() - t2.getTime();
      }
      var z = ["D", "DD"], J = ["YY", "YYYY"];
      function ee(e2) {
        return z.indexOf(e2) !== -1;
      }
      function te(e2) {
        return J.indexOf(e2) !== -1;
      }
      function re(e2, t2, r2) {
        if (e2 === "YYYY")
          throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(t2, "`) for formatting years to the input `").concat(r2, "`; see: https://git.io/fxCyr"));
        if (e2 === "YY")
          throw new RangeError("Use `yy` instead of `YY` (in `".concat(t2, "`) for formatting years to the input `").concat(r2, "`; see: https://git.io/fxCyr"));
        if (e2 === "D")
          throw new RangeError("Use `d` instead of `D` (in `".concat(t2, "`) for formatting days of the month to the input `").concat(r2, "`; see: https://git.io/fxCyr"));
        if (e2 === "DD")
          throw new RangeError("Use `dd` instead of `DD` (in `".concat(t2, "`) for formatting days of the month to the input `").concat(r2, "`; see: https://git.io/fxCyr"));
      }
      var ne = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, ae = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, ie = /^'([^]*?)'?$/, oe = /''/g, se = /[a-zA-Z]/;
      function ue(e2) {
        return e2.match(ie)[1].replace(oe, "'");
      }
      var ce = function() {
        function e2(e3, t2, r2) {
          if (this.name = e3, this.value = t2, this.structure = r2, this.structure && !this.isValid())
            throw "The " + this.name + " key is in wrong format!";
        }
        return e2.prototype.isValid = function() {
          return this.structure.test(this.value);
        }, e2.prototype.toString = function() {
          return this.name + ":" + this.value;
        }, e2;
      }(), he = function(e2) {
        function t2(t3) {
          var r2 = e2.call(this, "acc", t3) || this;
          if (!r2.isValid())
            throw "The " + r2.name + " key is in wrong format!";
          return r2;
        }
        return n(t2, e2), t2.prototype.isValid = function() {
          var e3 = this.value.split("+");
          return e3.length === 1 ? a(this.value) : a(e3[0]) && function(e4) {
            if (!e4)
              return false;
            var t3 = new RegExp("^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$", ""), r2 = i[e4.toUpperCase().slice(4, 6)];
            return t3.test(e4) && r2 !== void 0;
          }(e3[1]);
        }, t2;
      }(ce), ge = function(e2) {
        function t2(t3) {
          var r2 = e2.call(this, "alt-acc", t3.join(",")) || this;
          if (!r2.isValid())
            throw "The " + r2.name + " key is in wrong format!";
          return r2;
        }
        return n(t2, e2), t2.prototype.isValid = function() {
          return this.value.split(",").every(function(e3) {
            return new he(e3).isValid();
          });
        }, t2;
      }(ce), de = function(e2) {
        function t2(t3) {
          return e2.call(this, "am", t3, /^[1-9][0-9]*(\.[0-9][0-9])?$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), le = function(e2) {
        function t2(t3) {
          return e2.call(this, "cc", t3, /^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), be = function(e2) {
        function t2(t3) {
          return e2.call(this, "rf", t3, /^[0-9]{1,16}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), fe = function(e2) {
        function t2(t3) {
          return e2.call(this, "rn", t3, /^[^*]{1,35}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), me = function(e2) {
        function t2(t3) {
          var r2 = e2.call(this, "dt", function(e3, t4, r3) {
            o(2, arguments);
            var n2 = String(t4), a2 = r3 || {}, i2 = a2.locale || m, c2 = i2.options && i2.options.firstWeekContainsDate, h2 = c2 == null ? 1 : A(c2), g2 = a2.firstWeekContainsDate == null ? h2 : A(a2.firstWeekContainsDate);
            if (!(g2 >= 1 && g2 <= 7))
              throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
            var d2 = i2.options && i2.options.weekStartsOn, l2 = d2 == null ? 0 : A(d2), b2 = a2.weekStartsOn == null ? l2 : A(a2.weekStartsOn);
            if (!(b2 >= 0 && b2 <= 6))
              throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
            if (!i2.localize)
              throw new RangeError("locale must contain localize property");
            if (!i2.formatLong)
              throw new RangeError("locale must contain formatLong property");
            var f2 = s(e3);
            if (!u(f2))
              throw new RangeError("Invalid time value");
            var p2 = j(f2), w2 = y(f2, p2), x2 = { firstWeekContainsDate: g2, weekStartsOn: b2, locale: i2, _originalDate: f2 };
            return n2.match(ae).map(function(e4) {
              var t5 = e4[0];
              return t5 === "p" || t5 === "P" ? (0, Q[t5])(e4, i2.formatLong, x2) : e4;
            }).join("").match(ne).map(function(r4) {
              if (r4 === "''")
                return "'";
              var n3 = r4[0];
              if (n3 === "'")
                return ue(r4);
              var o2 = F[n3];
              if (o2)
                return !a2.useAdditionalWeekYearTokens && te(r4) && re(r4, t4, e3), !a2.useAdditionalDayOfYearTokens && ee(r4) && re(r4, t4, e3), o2(w2, r4, i2.localize, x2);
              if (n3.match(se))
                throw new RangeError("Format string contains an unescaped latin alphabet character `" + n3 + "`");
              return r4;
            }).join("");
          }(t3, "yyyyMMdd")) || this;
          if (r2.originalDate = t3, !r2.isValid())
            throw "The " + r2.name + " key is in wrong format!";
          return r2;
        }
        return n(t2, e2), t2.prototype.isValid = function() {
          return u(this.originalDate);
        }, t2;
      }(ce), Ae = function(e2) {
        function t2(t3) {
          return e2.call(this, "pt", t3, /^[^*]{1,3}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), pe = function(e2) {
        function t2(t3) {
          return e2.call(this, "msg", t3, /^[^*]{1,60}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), ye = function(e2) {
        function t2(t3) {
          return e2.call(this, "crc32", t3, /^[A-F0-9]{8,8}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), we = function(e2) {
        function t2(t3) {
          return e2.call(this, "x-per", t3, /^(30|[12]?[0-9])$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), xe = function(e2) {
        function t2(t3) {
          return e2.call(this, "x-vs", t3, /^[1-9][0-9]{0,9}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), Ne = function(e2) {
        function t2(t3) {
          return e2.call(this, "x-ss", t3, /^[1-9][0-9]{0,9}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), ve = function(e2) {
        function t2(t3) {
          return e2.call(this, "x-ks", t3, /^[1-9][0-9]{0,9}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), Be = function(e2) {
        function t2(t3) {
          return e2.call(this, "x-id", t3, /^[^*]{1,20}$/) || this;
        }
        return n(t2, e2), t2;
      }(ce), Re = { acc: he, altAcc: ge, am: de, cc: le, rf: be, rn: fe, dt: me, pt: Ae, msg: pe, crc32: ye, xper: we, xvs: xe, xss: Ne, xks: ve, xid: Be };
      return function(e2) {
        var t2 = [];
        for (var r2 in e2) {
          if (!Re[r2])
            throw "Was given an unsupported key: " + r2;
          t2.push(new Re[r2](e2[r2]));
        }
        return "SPD*1.0*" + t2.sort().join("*").toUpperCase();
      };
    });
  }
});

// dep:spayd
var spayd_default = require_spayd_umd_min();
export {
  spayd_default as default
};
/*!
     * @license
     * This Source Code Form is subject to the terms of the Mozilla Public
     * License, v. 2.0. If a copy of the MPL was not distributed with this
     * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
//# sourceMappingURL=spayd.js.map
