{
  "version": 3,
  "sources": ["browser-external:stream", "../../qr-image/lib/encode.js", "../../qr-image/lib/errorcode.js", "../../qr-image/lib/matrix.js", "../../qr-image/lib/qr-base.js", "browser-external:zlib", "../../qr-image/lib/crc32buffer.js", "../../qr-image/lib/crc32.js", "../../qr-image/lib/png.js", "../../qr-image/lib/vector.js", "../../qr-image/lib/qr.js", "../../sepa-qr/index.js", "dep:sepa-qr"],
  "sourcesContent": ["export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"stream\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "\"use strict\";\n\nfunction pushBits(arr, n, value) {\n    for (var bit = 1 << (n - 1); bit; bit = bit >>> 1) {\n        arr.push(bit & value ? 1 : 0);\n    }\n}\n\n// {{{1 8bit encode\nfunction encode_8bit(data) {\n    var len = data.length;\n    var bits = [];\n\n    for (var i = 0; i < len; i++) {\n        pushBits(bits, 8, data[i]);\n    }\n\n    var res = {};\n\n    var d = [0, 1, 0, 0];\n    pushBits(d, 16, len);\n    res.data10 = res.data27 = d.concat(bits);\n\n    if (len < 256) {\n        var d = [0, 1, 0, 0];\n        pushBits(d, 8, len);\n        res.data1 = d.concat(bits);\n    }\n\n    return res;\n}\n\n// {{{1 alphanumeric encode\nvar ALPHANUM = (function(s) {\n    var res = {};\n    for (var i = 0; i < s.length; i++) {\n        res[s[i]] = i;\n    }\n    return res;\n})('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:');\n\nfunction encode_alphanum(str) {\n    var len = str.length;\n    var bits = [];\n\n    for (var i = 0; i < len; i += 2) {\n        var b = 6;\n        var n = ALPHANUM[str[i]];\n        if (str[i+1]) {\n            b = 11;\n            n = n * 45 + ALPHANUM[str[i+1]];\n        }\n        pushBits(bits, b, n);\n    }\n\n    var res = {};\n\n    var d = [0, 0, 1, 0];\n    pushBits(d, 13, len);\n    res.data27 = d.concat(bits);\n\n    if (len < 2048) {\n        var d = [0, 0, 1, 0];\n        pushBits(d, 11, len);\n        res.data10 = d.concat(bits);\n    }\n\n    if (len < 512) {\n        var d = [0, 0, 1, 0];\n        pushBits(d, 9, len);\n        res.data1 = d.concat(bits);\n    }\n\n    return res;\n}\n\n// {{{1 numeric encode\nfunction encode_numeric(str) {\n    var len = str.length;\n    var bits = [];\n\n    for (var i = 0; i < len; i += 3) {\n        var s = str.substr(i, 3);\n        var b = Math.ceil(s.length * 10 / 3);\n        pushBits(bits, b, parseInt(s, 10));\n    }\n\n    var res = {};\n\n    var d = [0, 0, 0, 1];\n    pushBits(d, 14, len);\n    res.data27 = d.concat(bits);\n\n    if (len < 4096) {\n        var d = [0, 0, 0, 1];\n        pushBits(d, 12, len);\n        res.data10 = d.concat(bits);\n    }\n\n    if (len < 1024) {\n        var d = [0, 0, 0, 1];\n        pushBits(d, 10, len);\n        res.data1 = d.concat(bits);\n    }\n\n    return res;\n}\n\n// {{{1 url encode\nfunction encode_url(str) {\n    var slash = str.indexOf('/', 8) + 1 || str.length;\n    var res = encode(str.slice(0, slash).toUpperCase(), false);\n\n    if (slash >= str.length) {\n        return res;\n    }\n\n    var path_res = encode(str.slice(slash), false);\n\n    res.data27 = res.data27.concat(path_res.data27);\n\n    if (res.data10 && path_res.data10) {\n        res.data10 = res.data10.concat(path_res.data10);\n    }\n\n    if (res.data1 && path_res.data1) {\n        res.data1 = res.data1.concat(path_res.data1);\n    }\n\n    return res;\n}\n\n// {{{1 Choose encode mode and generates struct with data for different version\nfunction encode(data, parse_url) {\n    var str;\n    var t = typeof data;\n\n    if (t == 'string' || t == 'number') {\n        str = '' + data;\n        data = new Buffer(str);\n    } else if (Buffer.isBuffer(data)) {\n        str = data.toString();\n    } else if (Array.isArray(data)) {\n        data = new Buffer(data);\n        str = data.toString();\n    } else {\n        throw new Error(\"Bad data\");\n    }\n\n    if (/^[0-9]+$/.test(str)) {\n        if (data.length > 7089) {\n            throw new Error(\"Too much data\");\n        }\n        return encode_numeric(str);\n    }\n\n    if (/^[0-9A-Z \\$%\\*\\+\\.\\/\\:\\-]+$/.test(str)) {\n        if (data.length > 4296) {\n            throw new Error(\"Too much data\");\n        }\n        return encode_alphanum(str);\n    }\n\n    if (parse_url && /^https?:/i.test(str)) {\n        return encode_url(str);\n    }\n\n    if (data.length > 2953) {\n        throw new Error(\"Too much data\");\n    }\n    return encode_8bit(data);\n}\n\n// {{{1 export functions\nmodule.exports = encode;\n", "\"use strict\";\n\n// {{{1 Galois Field Math\nvar GF256_BASE = 285;\n\nvar EXP_TABLE = [1];\nvar LOG_TABLE = [];\n\nfor (var i = 1; i < 256; i++) {\n    var n = EXP_TABLE[i - 1] << 1;\n    if (n > 255) n = n ^ GF256_BASE;\n    EXP_TABLE[i] = n;\n}\n\nfor (var i = 0; i < 255; i++) {\n    LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nfunction exp(k) {\n    while (k < 0) k += 255;\n    while (k > 255) k -= 255;\n    return EXP_TABLE[k];\n}\n\nfunction log(k) {\n    if (k < 1 || k > 255) {\n        throw Error('Bad log(' + k + ')');\n    }\n    return LOG_TABLE[k];\n}\n\n// {{{1 Generator Polynomials\nvar POLYNOMIALS = [\n    [0], // a^0 x^0\n    [0, 0], // a^0 x^1 + a^0 x^0\n    [0, 25, 1], // a^0 x^2 + a^25 x^1 + a^1 x^0\n    // and so on...\n];\n\nfunction generatorPolynomial(num) {\n    if (POLYNOMIALS[num]) {\n        return POLYNOMIALS[num];\n    }\n    var prev = generatorPolynomial(num - 1);\n    var res = [];\n\n    res[0] = prev[0];\n    for (var i = 1; i <= num; i++) {\n        res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\n    }\n    POLYNOMIALS[num] = res;\n    return res;\n}\n\n// {{{1 export functions\nmodule.exports = function calculate_ec(msg, ec_len) {\n    // `msg` could be array or buffer\n    // convert `msg` to array\n    msg = [].slice.call(msg);\n\n    // Generator Polynomial\n    var poly = generatorPolynomial(ec_len);\n\n    for (var i = 0; i < ec_len; i++) msg.push(0);\n    while (msg.length > ec_len) {\n        if (!msg[0]) {\n            msg.shift();\n            continue;\n        }\n        var log_k = log(msg[0]);\n        for (var i = 0; i <= ec_len; i++) {\n            msg[i] = msg[i] ^ exp(poly[i] + log_k);\n        }\n        msg.shift();\n    }\n    return new Buffer(msg);\n}\n", "\"use strict\";\n\n// {{{1 Initialize matrix with zeros\nfunction init(version) {\n    var N = version * 4 + 17;\n    var matrix = [];\n    var zeros = new Buffer(N);\n    zeros.fill(0);\n    zeros = [].slice.call(zeros);\n    for (var i = 0; i < N; i++) {\n        matrix[i] = zeros.slice();\n    }\n    return matrix;\n}\n\n// {{{1 Put finders into matrix\nfunction fillFinders(matrix) {\n    var N = matrix.length;\n    for (var i = -3; i <= 3; i++) {\n        for (var j = -3; j <= 3; j++) {\n            var max = Math.max(i, j);\n            var min = Math.min(i, j);\n            var pixel = (max == 2 && min >= -2) || (min == -2 && max <= 2) ? 0x80 : 0x81;\n            matrix[3 + i][3 + j] = pixel;\n            matrix[3 + i][N - 4 + j] = pixel;\n            matrix[N - 4 + i][3 + j] = pixel;\n        }\n    }\n    for (var i = 0; i < 8; i++) {\n        matrix[7][i] = matrix[i][7] =\n        matrix[7][N - i - 1] = matrix[i][N - 8] =\n        matrix[N - 8][i] = matrix[N - 1 - i][7] = 0x80;\n    }\n}\n\n// {{{1 Put align and timinig\nfunction fillAlignAndTiming(matrix) {\n    var N = matrix.length;\n    if (N > 21) {\n        var len = N - 13;\n        var delta = Math.round(len / Math.ceil(len / 28));\n        if (delta % 2) delta++;\n        var res = [];\n        for (var p = len + 6; p > 10; p -= delta) {\n            res.unshift(p);\n        }\n        res.unshift(6);\n        for (var i = 0; i < res.length; i++) {\n            for (var j = 0; j < res.length; j++) {\n                var x = res[i], y = res[j];\n                if (matrix[x][y]) continue;\n                for (var r = -2; r <=2 ; r++) {\n                    for (var c = -2; c <=2 ; c++) {\n                        var max = Math.max(r, c);\n                        var min = Math.min(r, c);\n                        var pixel = (max == 1 && min >= -1) || (min == -1 && max <= 1) ? 0x80 : 0x81;\n                        matrix[x + r][y + c] = pixel;\n                    }\n                }\n            }\n        }\n    }\n    for (var i = 8; i < N - 8; i++) {\n        matrix[6][i] = matrix[i][6] = i % 2 ? 0x80 : 0x81;\n    }\n}\n\n// {{{1 Fill reserved areas with zeroes\nfunction fillStub(matrix) {\n    var N = matrix.length;\n    for (var i = 0; i < 8; i++) {\n        if (i != 6) {\n            matrix[8][i] = matrix[i][8] = 0x80;\n        }\n        matrix[8][N - 1 - i] = 0x80;\n        matrix[N - 1 - i][8] = 0x80;\n    }\n    matrix[8][8] = 0x80;\n    matrix[N - 8][8] = 0x81;\n\n    if (N < 45) return;\n\n    for (var i = N - 11; i < N - 8; i++) {\n        for (var j = 0; j < 6; j++) {\n            matrix[i][j] = matrix[j][i] = 0x80;\n        }\n    }\n}\n\n// {{{1 Fill reserved areas\nvar fillReserved = (function() {\n    var FORMATS = Array(32);\n    var VERSIONS = Array(40);\n\n    var gf15 = 0x0537;\n    var gf18 = 0x1f25;\n    var formats_mask = 0x5412;\n\n    for (var format = 0; format < 32; format++) {\n        var res = format << 10;\n        for (var i = 5; i > 0; i--) {\n            if (res >>> (9 + i)) {\n                res = res ^ (gf15 << (i - 1));\n            }\n        }\n        FORMATS[format] = (res | (format << 10)) ^ formats_mask;\n    }\n\n    for (var version = 7; version <= 40; version++) {\n        var res = version << 12;\n        for (var i = 6; i > 0; i--) {\n            if (res >>> (11 + i)) {\n                res = res ^ (gf18 << (i - 1));\n            }\n        }\n        VERSIONS[version] = (res | (version << 12));\n    }\n\n    var EC_LEVELS = { L: 1, M: 0, Q: 3, H: 2 };\n\n    return function fillReserved(matrix, ec_level, mask) {\n        var N = matrix.length;\n        var format = FORMATS[EC_LEVELS[ec_level] << 3 | mask];\n        function F(k) { return format >> k & 1 ? 0x81 : 0x80 };\n        for (var i = 0; i < 8; i++) {\n            matrix[8][N - 1 - i] = F(i);\n            if (i < 6) matrix[i][8] = F(i);\n        }\n        for (var i = 8; i < 15; i++) {\n            matrix[N - 15 + i][8] = F(i);\n            if (i > 8) matrix[8][14 - i] = F(i);\n        }\n        matrix[7][8] = F(6);\n        matrix[8][8] = F(7);\n        matrix[8][7] = F(8);\n\n        var version = VERSIONS[(N - 17)/4];\n        if (!version) return;\n        function V(k) { return version >> k & 1 ? 0x81 : 0x80 };\n        for (var i = 0; i < 6; i++) {\n            for (var j = 0; j < 3; j++) {\n                matrix[N - 11 + j][i] = matrix[i][N - 11 + j] = V(i * 3 + j);\n            }\n        }\n    }\n})();\n\n// {{{1 Fill data\nvar fillData = (function() {\n    var MASK_FUNCTIONS = [\n        function(i, j) { return (i + j) % 2 == 0 },\n        function(i, j) { return i % 2 == 0 },\n        function(i, j) { return j % 3 == 0 },\n        function(i, j) { return (i + j) % 3 == 0 },\n        function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0 },\n        function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0 },\n        function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0 },\n        function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0 }\n    ];\n\n    return function fillData(matrix, data, mask) {\n        var N = matrix.length;\n        var row, col, dir = -1;\n        row = col = N - 1;\n        var mask_fn = MASK_FUNCTIONS[mask];\n        var len = data.blocks[data.blocks.length - 1].length;\n\n        for (var i = 0; i < len; i++) {\n            for (var b = 0; b < data.blocks.length; b++) {\n                if (data.blocks[b].length <= i) continue;\n                put(data.blocks[b][i]);\n            }\n        }\n\n        len = data.ec_len;\n        for (var i = 0; i < len; i++) {\n            for (var b = 0; b < data.ec.length; b++) {\n                put(data.ec[b][i]);\n            }\n        }\n\n        if (col > -1) {\n            do {\n                matrix[row][col] = mask_fn(row, col) ? 1 : 0;\n            } while (next());\n        }\n\n        function put(byte) {\n            for (var mask = 0x80; mask; mask = mask >> 1) {\n                var pixel = !!(mask & byte);\n                if (mask_fn(row, col)) pixel = !pixel;\n                matrix[row][col] = pixel ? 1 : 0;\n                next();\n            }\n        }\n\n        function next() {\n            do {\n                if ((col % 2) ^ (col < 6)) {\n                    if (dir < 0 && row == 0 || dir > 0 && row == N - 1) {\n                        col--;\n                        dir = -dir;\n                    } else {\n                        col++;\n                        row += dir;\n                    }\n                } else {\n                    col--;\n                }\n                if (col == 6) {\n                    col--;\n                }\n                if (col < 0) {\n                    return false;\n                }\n            } while (matrix[row][col] & 0xf0);\n            return true;\n        }\n    }\n})();\n\n// {{{1 Calculate penalty\nfunction calculatePenalty(matrix) {\n    var N = matrix.length;\n    var penalty = 0;\n    // Rule 1\n    for (var i = 0; i < N; i++) {\n        var pixel = matrix[i][0] & 1;\n        var len = 1;\n        for (var j = 1; j < N; j++) {\n            var p = matrix[i][j] & 1;\n            if (p == pixel) {\n                len++;\n                continue;\n            }\n            if (len >= 5) {\n                penalty += len - 2;\n            }\n            pixel = p;\n            len = 1;\n        }\n        if (len >= 5) {\n            penalty += len - 2;\n        }\n    }\n    for (var j = 0; j < N; j++) {\n        var pixel = matrix[0][j] & 1;\n        var len = 1;\n        for (var i = 1; i < N; i++) {\n            var p = matrix[i][j] & 1;\n            if (p == pixel) {\n                len++;\n                continue;\n            }\n            if (len >= 5) {\n                penalty += len - 2;\n            }\n            pixel = p;\n            len = 1;\n        }\n        if (len >= 5) {\n            penalty += len - 2;\n        }\n    }\n\n    // Rule 2\n    for (var i = 0; i < N - 1; i++) {\n        for (var j = 0; j < N - 1; j++) {\n            var s = matrix[i][j] + matrix[i][j + 1] + matrix[i + 1][j] + matrix[i + 1][j + 1] & 7;\n            if (s == 0 || s == 4) {\n                penalty += 3;\n            }\n        }\n    }\n\n    // Rule 3\n    function I(k) { return matrix[i][j + k] & 1 };\n    function J(k) { return matrix[i + k][j] & 1 };\n    for (var i = 0; i < N; i++) {\n        for (var j = 0; j < N; j++) {\n            if (j < N - 6 && I(0) && !I(1) && I(2) && I(3) && I(4) && !I(5) && I(6)) {\n                if (j >= 4 && !(I(-4) || I(-3) || I(-2) || I(-1))) {\n                    penalty += 40;\n                }\n                if (j < N - 10 && !(I(7) || I(8) || I(9) || I(10))) {\n                    penalty += 40;\n                }\n            }\n\n            if (i < N - 6 && J(0) && !J(1) && J(2) && J(3) && J(4) && !J(5) && J(6)) {\n                if (i >= 4 && !(J(-4) || J(-3) || J(-2) || J(-1))) {\n                    penalty += 40;\n                }\n                if (i < N - 10 && !(J(7) || J(8) || J(9) || J(10))) {\n                    penalty += 40;\n                }\n            }\n        }\n    }\n\n    // Rule 4\n    var numDark = 0;\n    for (var i = 0; i < N; i++) {\n        for (var j = 0; j < N; j++) {\n            if (matrix[i][j] & 1) numDark++;\n        }\n    }\n    penalty += 10 * Math.floor(Math.abs(10 - 20 * numDark/(N * N)));\n\n    return penalty;\n}\n\n// {{{1 All-in-one function\nfunction getMatrix(data) {\n    var matrix = init(data.version);\n    fillFinders(matrix);\n    fillAlignAndTiming(matrix);\n    fillStub(matrix);\n\n    var penalty = Infinity;\n    var bestMask = 0;\n    for (var mask = 0; mask < 8; mask++) {\n        fillData(matrix, data, mask);\n        fillReserved(matrix, data.ec_level, mask);\n        var p = calculatePenalty(matrix);\n        if (p < penalty) {\n            penalty = p;\n            bestMask = mask;\n        }\n    }\n\n    fillData(matrix, data, bestMask);\n    fillReserved(matrix, data.ec_level, bestMask);\n\n    return matrix.map(function(row) {\n        return row.map(function(cell) {\n            return cell & 1;\n        });\n    });\n}\n\n// {{{1 export functions\nmodule.exports = {\n    getMatrix: getMatrix,\n    init: init,\n    fillFinders: fillFinders,\n    fillAlignAndTiming: fillAlignAndTiming,\n    fillStub: fillStub,\n    fillReserved: fillReserved,\n    fillData: fillData,\n    calculatePenalty: calculatePenalty,\n}\n", "\"use strict\";\n\nvar encode = require('./encode');\nvar calculateEC = require('./errorcode');\nvar matrix = require('./matrix');\n\nfunction _deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nvar EC_LEVELS = ['L', 'M', 'Q', 'H'];\n\n// {{{1 Versions\nvar versions = [\n    [], // there is no version 0\n    // total number of codewords, (number of ec codewords, number of blocks) * ( L, M, Q, H )\n    [26, 7, 1, 10, 1, 13, 1, 17, 1],\n    [44, 10, 1, 16, 1, 22, 1, 28, 1],\n    [70, 15, 1, 26, 1, 36, 2, 44, 2],\n    [100, 20, 1, 36, 2, 52, 2, 64, 4],\n    [134, 26, 1, 48, 2, 72, 4, 88, 4], // 5\n    [172, 36, 2, 64, 4, 96, 4, 112, 4],\n    [196, 40, 2, 72, 4, 108, 6, 130, 5],\n    [242, 48, 2, 88, 4, 132, 6, 156, 6],\n    [292, 60, 2, 110, 5, 160, 8, 192, 8],\n    [346, 72, 4, 130, 5, 192, 8, 224, 8], // 10\n    [404, 80, 4, 150, 5, 224, 8, 264, 11],\n    [466, 96, 4, 176, 8, 260, 10, 308, 11],\n    [532, 104, 4, 198, 9, 288, 12, 352, 16],\n    [581, 120, 4, 216, 9, 320, 16, 384, 16],\n    [655, 132, 6, 240, 10, 360, 12, 432, 18], // 15\n    [733, 144, 6, 280, 10, 408, 17, 480, 16],\n    [815, 168, 6, 308, 11, 448, 16, 532, 19],\n    [901, 180, 6, 338, 13, 504, 18, 588, 21],\n    [991, 196, 7, 364, 14, 546, 21, 650, 25],\n    [1085, 224, 8, 416, 16, 600, 20, 700, 25], // 20\n    [1156, 224, 8, 442, 17, 644, 23, 750, 25],\n    [1258, 252, 9, 476, 17, 690, 23, 816, 34],\n    [1364, 270, 9, 504, 18, 750, 25, 900, 30],\n    [1474, 300, 10, 560, 20, 810, 27, 960, 32],\n    [1588, 312, 12, 588, 21, 870, 29, 1050, 35], // 25\n    [1706, 336, 12, 644, 23, 952, 34, 1110, 37],\n    [1828, 360, 12, 700, 25, 1020, 34, 1200, 40],\n    [1921, 390, 13, 728, 26, 1050, 35, 1260, 42],\n    [2051, 420, 14, 784, 28, 1140, 38, 1350, 45],\n    [2185, 450, 15, 812, 29, 1200, 40, 1440, 48], // 30\n    [2323, 480, 16, 868, 31, 1290, 43, 1530, 51],\n    [2465, 510, 17, 924, 33, 1350, 45, 1620, 54],\n    [2611, 540, 18, 980, 35, 1440, 48, 1710, 57],\n    [2761, 570, 19, 1036, 37, 1530, 51, 1800, 60],\n    [2876, 570, 19, 1064, 38, 1590, 53, 1890, 63], // 35\n    [3034, 600, 20, 1120, 40, 1680, 56, 1980, 66],\n    [3196, 630, 21, 1204, 43, 1770, 59, 2100, 70],\n    [3362, 660, 22, 1260, 45, 1860, 62, 2220, 74],\n    [3532, 720, 24, 1316, 47, 1950, 65, 2310, 77],\n    [3706, 750, 25, 1372, 49, 2040, 68, 2430, 81] // 40\n];\n\nversions = versions.map(function(v, index) {\n    if (!index) return {};\n\n    var res = {\n    }\n    for (var i = 1; i < 8; i += 2) {\n        var length = v[0] - v[i];\n        var num_template = v[i+1];\n        var ec_level = EC_LEVELS[(i/2)|0];\n        var level = {\n            version: index,\n            ec_level: ec_level,\n            data_len: length,\n            ec_len: v[i] / num_template,\n            blocks: [],\n            ec: []\n        }\n\n        for (var k = num_template, n = length; k > 0; k--) {\n            var block = (n / k)|0;\n            level.blocks.push(block);\n            n -= block;\n\n        }\n        res[ec_level] = level;\n    }\n    return res;\n});\n\n// {{{1 Get version template\nfunction getTemplate(message, ec_level) {\n    var i = 1;\n    var len;\n\n    if (message.data1) {\n        len = Math.ceil(message.data1.length / 8);\n    } else {\n        i = 10;\n    }\n    for (/* i */; i < 10; i++) {\n        var version = versions[i][ec_level];\n        if (version.data_len >= len) {\n            return _deepCopy(version);\n        }\n    }\n\n    if (message.data10) {\n        len = Math.ceil(message.data10.length / 8);\n    } else {\n        i = 27;\n    }\n    for (/* i */; i < 27; i++) {\n        var version = versions[i][ec_level];\n        if (version.data_len >= len) {\n            return _deepCopy(version);\n        }\n    }\n\n    len = Math.ceil(message.data27.length / 8);\n    for (/* i */; i < 41; i++) {\n        var version = versions[i][ec_level];\n        if (version.data_len >= len) {\n            return _deepCopy(version);\n        }\n    }\n    throw new Error(\"Too much data\");\n}\n\n// {{{1 Fill template\nfunction fillTemplate(message, template) {\n    var blocks = new Buffer(template.data_len);\n    blocks.fill(0);\n\n    if (template.version < 10) {\n        message = message.data1;\n    } else if (template.version < 27) {\n        message = message.data10;\n    } else {\n        message = message.data27;\n    }\n\n    var len = message.length;\n\n    for (var i = 0; i < len; i += 8) {\n        var b = 0;\n        for (var j = 0; j < 8; j++) {\n            b = (b << 1) | (message[i + j] ? 1 : 0);\n        }\n        blocks[i / 8] = b;\n    }\n\n    var pad = 236;\n    for (var i = Math.ceil((len + 4) / 8); i < blocks.length; i++) {\n        blocks[i] = pad;\n        pad = (pad == 236) ? 17 : 236;\n    }\n\n    var offset = 0;\n    template.blocks = template.blocks.map(function(n) {\n        var b = blocks.slice(offset, offset + n);\n        offset += n;\n        template.ec.push(calculateEC(b, template.ec_len));\n        return b;\n    });\n\n    return template;\n}\n\n// {{{1 All-in-one\nfunction QR(text, ec_level, parse_url) {\n    ec_level = EC_LEVELS.indexOf(ec_level) > -1 ? ec_level : 'M';\n    var message = encode(text, parse_url);\n    var data = fillTemplate(message, getTemplate(message, ec_level));\n    return matrix.getMatrix(data);\n}\n\n// {{{1 export functions\nmodule.exports = {\n    QR: QR,\n    getTemplate: getTemplate,\n    fillTemplate: fillTemplate,\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"zlib\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "'use strict';\n\nvar crc_table = [];\n\nfor (var n = 0; n < 256; n++) {\n    var c = crc_table[n] = new Buffer(4);\n    c.writeUInt32BE(n, 0);\n\n    for (var k = 0; k < 8; k++) {\n        var b0 = c[0] & 1;\n        var b1 = c[1] & 1;\n        var b2 = c[2] & 1;\n        var b3 = c[3] & 1;\n\n        c[0] = (c[0] >> 1) ^ (b3 ? 0xed : 0);\n        c[1] = (c[1] >> 1) ^ (b3 ? 0xb8 : 0) ^ (b0 ? 0x80 : 0);\n        c[2] = (c[2] >> 1) ^ (b3 ? 0x83 : 0) ^ (b1 ? 0x80 : 0);\n        c[3] = (c[3] >> 1) ^ (b3 ? 0x20 : 0) ^ (b2 ? 0x80 : 0);\n    }\n}\n\nfunction update(c, buf) {\n    var l = buf.length;\n    for (var n = 0; n < l; n++) {\n        var e = crc_table[c[3] ^ buf[n]];\n        c[3] = e[3] ^ c[2];\n        c[2] = e[2] ^ c[1];\n        c[1] = e[1] ^ c[0];\n        c[0] = e[0];\n    }\n}\n\nfunction crc32(/* arguments */) {\n    var l = arguments.length;\n    var c = new Buffer(4);\n    c.fill(0xff);\n\n    for (var i = 0; i < l; i++) {\n        update(c, new Buffer(arguments[i]));\n    }\n\n    c[0] = c[0] ^ 0xff;\n    c[1] = c[1] ^ 0xff;\n    c[2] = c[2] ^ 0xff;\n    c[3] = c[3] ^ 0xff;\n\n    return c.readUInt32BE(0);\n}\n\nmodule.exports = crc32;\n", "\"use strict\";\n\n(function() {\n\n// ARMv6 (Raspberry Pi) has bug in bitwise operations\n// https://code.google.com/p/v8/issues/detail?id=3757\n// https://github.com/alexeyten/qr-image/issues/13\nif (process.arch === 'arm') {\n    module.exports = require('./crc32buffer');\n    return;\n}\n\nvar crc_table = [];\n\n(function() {\n    for (var n = 0; n < 256; n++) {\n        var c = n;\n        for (var k = 0; k < 8; k++) {\n            if (c & 1) {\n                c = 0xedb88320 ^ (c >>> 1);\n            } else {\n                c = c >>> 1;\n            }\n        }\n        crc_table[n] = c >>> 0;\n    }\n})();\n\nfunction update(c, buf) {\n    var l = buf.length;\n    for (var n = 0; n < l; n++) {\n        c = crc_table[(c ^ buf[n]) & 0xff] ^ (c >>> 8);\n    }\n    return c;\n}\n\nfunction crc32(/* arguments */) {\n    var l = arguments.length;\n    var c = -1;\n    for (var i = 0; i < l; i++) {\n        c = update(c, new Buffer(arguments[i]));\n    }\n    c = (c ^ -1) >>> 0;\n    return c;\n}\n\nmodule.exports = crc32;\n    \n})();\n", "\"use strict\";\n\nvar zlib = require('zlib');\n\nvar crc32 = require('./crc32');\n\nvar PNG_HEAD = new Buffer([137,80,78,71,13,10,26,10]);\nvar PNG_IHDR = new Buffer([0,0,0,13,73,72,68,82,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0]);\nvar PNG_IDAT = new Buffer([0,0,0,0,73,68,65,84]);\nvar PNG_IEND = new Buffer([0,0,0,0,73,69,78,68,174,66,96,130]);\n\nfunction png(bitmap, stream) {\n    stream.push(PNG_HEAD);\n\n    var IHDR = Buffer.concat([PNG_IHDR]);\n    IHDR.writeUInt32BE(bitmap.size, 8);\n    IHDR.writeUInt32BE(bitmap.size, 12);\n    IHDR.writeUInt32BE(crc32(IHDR.slice(4, -4)), 21);\n    stream.push(IHDR);\n\n    var IDAT = Buffer.concat([\n        PNG_IDAT,\n        zlib.deflateSync(bitmap.data, { level: 9 }),\n        new Buffer(4)\n    ]);\n    IDAT.writeUInt32BE(IDAT.length - 12, 0);\n    IDAT.writeUInt32BE(crc32(IDAT.slice(4, -4)), IDAT.length - 4);\n    stream.push(IDAT);\n\n    stream.push(PNG_IEND);\n    stream.push(null);\n}\n\nfunction bitmap(matrix, size, margin) {\n    var N = matrix.length;\n    var X = (N + 2 * margin) * size;\n    var data = new Buffer((X + 1) * X);\n    data.fill(255);\n    for (var i = 0; i < X; i++) {\n        data[i * (X + 1)] = 0;\n    }\n\n    for (var i = 0; i < N; i++) {\n        for (var j = 0; j < N; j++) {\n            if (matrix[i][j]) {\n                var offset = ((margin + i) * (X + 1) + (margin + j)) * size + 1;\n                data.fill(0, offset, offset + size);\n                for (var c = 1; c < size; c++) {\n                    data.copy(data, offset + c * (X + 1), offset, offset + size);\n                }\n            }\n        }\n    }\n\n    return {\n        data: data,\n        size: X\n    }\n}\n\nmodule.exports = {\n    bitmap: bitmap,\n    png: png\n}\n", "\"use strict\";\n\nfunction matrix2path(matrix) {\n    var N = matrix.length;\n    var filled = [];\n    for (var row = -1; row <= N; row++) {\n        filled[row] = [];\n    }\n\n    var path = [];\n    for (var row = 0; row < N; row++) {\n        for (var col = 0; col < N; col++) {\n            if (filled[row][col]) continue;\n            filled[row][col] = 1;\n            if (isDark(row, col)) {\n                if (!isDark(row - 1, col)) {\n                    path.push(plot(row, col, 'right'));\n                }\n            } else {\n                if (isDark(row, col - 1)) {\n                    path.push(plot(row, col, 'down'));\n                }\n            }\n        }\n    }\n    return path;\n\n    function isDark(row, col) {\n        if (row < 0 || col < 0 || row >= N || col >= N) return false;\n        return !!matrix[row][col];\n    }\n\n    function plot(row0, col0, dir) {\n        filled[row0][col0] = 1;\n        var res = [];\n        res.push(['M',  col0, row0 ]);\n        var row = row0;\n        var col = col0;\n        var len = 0;\n        do {\n            switch (dir) {\n            case 'right':\n                filled[row][col] = 1;\n                if (isDark(row, col)) {\n                    filled[row - 1][col] = 1;\n                    if (isDark(row - 1, col)) {\n                        res.push(['h', len]);\n                        len = 0;\n                        dir = 'up';\n                    } else {\n                        len++;\n                        col++;\n                    }\n                } else {\n                    res.push(['h', len]);\n                    len = 0;\n                    dir = 'down';\n                }\n                break;\n            case 'left':\n                filled[row - 1][col - 1] = 1;\n                if (isDark(row - 1, col - 1)) {\n                    filled[row][col - 1] = 1;\n                    if (isDark(row, col - 1)) {\n                        res.push(['h', -len]);\n                        len = 0;\n                        dir = 'down';\n                    } else {\n                        len++;\n                        col--;\n                    }\n                } else {\n                    res.push(['h', -len]);\n                    len = 0;\n                    dir = 'up';\n                }\n                break;\n            case 'down':\n                filled[row][col - 1] = 1;\n                if (isDark(row, col - 1)) {\n                    filled[row][col] = 1;\n                    if (isDark(row, col)) {\n                        res.push(['v', len]);\n                        len = 0;\n                        dir = 'right';\n                    } else {\n                        len++;\n                        row++;\n                    }\n                } else {\n                    res.push(['v', len]);\n                    len = 0;\n                    dir = 'left';\n                }\n                break;\n            case 'up':\n                filled[row - 1][col] = 1;\n                if (isDark(row - 1, col)) {\n                    filled[row - 1][col - 1] = 1;\n                    if (isDark(row - 1, col - 1)) {\n                        res.push(['v', -len]);\n                        len = 0;\n                        dir = 'left';\n                    } else {\n                        len++;\n                        row--;\n                    }\n                } else {\n                    res.push(['v', -len]);\n                    len = 0;\n                    dir = 'right';\n                }\n                break;\n            }\n        } while (row != row0 || col != col0);\n        return res;\n    }\n}\n\nfunction pushSVGPath(matrix, stream, margin) {\n    matrix2path(matrix).forEach(function(subpath) {\n        var res = '';\n        for (var k = 0; k < subpath.length; k++) {\n            var item = subpath[k];\n            switch (item[0]) {\n            case 'M':\n                res += 'M' + (item[1] + margin) + ' ' + (item[2] + margin);\n                break;\n            default:\n                res += item.join('');\n            }\n        }\n        res += 'z';\n        stream.push(res);\n    });\n}\n\nfunction SVG_object(matrix, margin) {\n    var stream = [];\n    pushSVGPath(matrix, stream, margin);\n\n    var result = {\n        size: matrix.length + 2 * margin,\n        path: stream.filter(Boolean).join('')\n    }\n\n    return result;\n}\n\nfunction SVG(matrix, stream, margin, size) {\n    var X = matrix.length + 2 * margin;\n    stream.push('<svg xmlns=\"http://www.w3.org/2000/svg\" ');\n    if (size > 0) {\n        var XY = X * size;\n        stream.push('width=\"' + XY + '\" height=\"' + XY + '\" ');\n    }\n    stream.push('viewBox=\"0 0 ' + X + ' ' + X + '\">');\n    stream.push('<path d=\"');\n    pushSVGPath(matrix, stream, margin);\n    stream.push('\"/></svg>');\n    stream.push(null);\n}\n\nfunction EPS(matrix, stream, margin) {\n    var N = matrix.length;\n    var scale = 9;\n    var X = (N + 2 * margin) * scale;\n    stream.push([\n        '%!PS-Adobe-3.0 EPSF-3.0',\n        '%%BoundingBox: 0 0 ' + X + ' ' + X,\n        '/h { 0 rlineto } bind def',\n        '/v { 0 exch neg rlineto } bind def',\n        '/M { neg ' + (N + margin) + ' add moveto } bind def',\n        '/z { closepath } bind def',\n        scale + ' ' + scale + ' scale',\n        ''\n    ].join('\\n'));\n\n    matrix2path(matrix).forEach(function(subpath) {\n        var res = '';\n        for (var k = 0; k < subpath.length; k++) {\n            var item = subpath[k];\n            switch (item[0]) {\n            case 'M':\n                res += (item[1] + margin) + ' ' + item[2] + ' M ';\n                break;\n            default:\n                res += item[1] + ' ' + item[0] + ' ';\n            }\n        }\n        res += 'z\\n';\n        stream.push(res);\n    });\n\n    stream.push('fill\\n%%EOF\\n');\n    stream.push(null);\n}\n\nfunction PDF(matrix, stream, margin) {\n    // TODO deflate\n    var N = matrix.length;\n    var scale = 9;\n    var X = (N + 2 * margin) * scale;\n    var data = [\n        '%PDF-1.0\\n\\n',\n        '1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj\\n',\n        '2 0 obj << /Type /Pages /Count 1 /Kids [ 3 0 R ] >> endobj\\n',\n    ];\n    data.push('3 0 obj << /Type /Page /Parent 2 0 R /Resources <<>> ' +\n        '/Contents 4 0 R /MediaBox [ 0 0 ' + X + ' ' + X + ' ] >> endobj\\n');\n\n    var path = scale + ' 0 0 ' + scale + ' 0 0 cm\\n';\n    path += matrix2path(matrix).map(function(subpath) {\n        var res = '';\n        var x, y;\n        for (var k = 0; k < subpath.length; k++) {\n            var item = subpath[k];\n            switch (item[0]) {\n            case 'M':\n                x = item[1] + margin;\n                y = N - item[2] + margin;\n                res += x + ' ' + y + ' m ';\n                break;\n            case 'h':\n                x += item[1];\n                res += x + ' ' + y + ' l ';\n                break;\n            case 'v':\n                y -= item[1];\n                res += x + ' ' + y + ' l ';\n                break;\n            }\n        }\n        res += 'h';\n        return res;\n    }).join('\\n');\n    path += '\\nf\\n';\n    data.push('4 0 obj << /Length ' + path.length + ' >> stream\\n' +\n        path + 'endstream\\nendobj\\n');\n\n    var xref = 'xref\\n0 5\\n0000000000 65535 f \\n';\n    for (var i = 1, l = data[0].length; i < 5; i++) {\n        xref += ('0000000000' + l).substr(-10) + ' 00000 n \\n';\n        l += data[i].length;\n    }\n    data.push(\n        xref,\n        'trailer << /Root 1 0 R /Size 5 >>\\n',\n        'startxref\\n' + l + '\\n%%EOF\\n'\n    );\n    stream.push(data.join(''));\n    stream.push(null);\n}\n\nmodule.exports = {\n    svg: SVG,\n    eps: EPS,\n    pdf: PDF,\n    svg_object: SVG_object\n}\n", "\"use strict\";\n\nvar Readable = require('stream').Readable;\n\nvar QR = require('./qr-base').QR;\nvar png = require('./png');\nvar vector = require('./vector');\n\nvar fn_noop = function() {};\n\nvar BITMAP_OPTIONS = {\n    parse_url: false,\n    ec_level: 'M',\n    size: 5,\n    margin: 4,\n    customize: null\n};\n\nvar VECTOR_OPTIONS = {\n    parse_url: false,\n    ec_level: 'M',\n    margin: 1,\n    size: 0\n};\n\nfunction get_options(options, force_type) {\n    if (typeof options === 'string') {\n        options = { 'ec_level': options }\n    } else {\n        options = options || {};\n    }\n    var _options = {\n        type: String(force_type || options.type || 'png').toLowerCase()\n    };\n\n    var defaults = _options.type == 'png' ? BITMAP_OPTIONS : VECTOR_OPTIONS;\n\n    for (var k in defaults) {\n        _options[k] = k in options ? options[k] : defaults[k];\n    }\n\n    return _options;\n}\n\nfunction qr_image(text, options) {\n    options = get_options(options);\n\n    var matrix = QR(text, options.ec_level, options.parse_url);\n    var stream = new Readable();\n    stream._read = fn_noop;\n\n    switch (options.type) {\n    case 'svg':\n    case 'pdf':\n    case 'eps':\n        process.nextTick(function() {\n            vector[options.type](matrix, stream, options.margin, options.size);\n        });\n        break;\n    case 'svgpath':\n        // deprecated, use svg_object method\n        process.nextTick(function() {\n            var obj = vector.svg_object(matrix, options.margin, options.size);\n            stream.push(obj.path);\n            stream.push(null);\n        });\n        break;\n    case 'png':\n    default:\n        process.nextTick(function() {\n            var bitmap = png.bitmap(matrix, options.size, options.margin);\n            if (options.customize) {\n                options.customize(bitmap);\n            }\n            png.png(bitmap, stream);\n        });\n    }\n\n    return stream;\n}\n\nfunction qr_image_sync(text, options) {\n    options = get_options(options);\n\n    var matrix = QR(text, options.ec_level, options.parse_url);\n    var stream = [];\n    var result;\n\n    switch (options.type) {\n    case 'svg':\n    case 'pdf':\n    case 'eps':\n        vector[options.type](matrix, stream, options.margin, options.size);\n        result = stream.filter(Boolean).join('');\n        break;\n    case 'png':\n    default:\n        var bitmap = png.bitmap(matrix, options.size, options.margin);\n        if (options.customize) {\n            options.customize(bitmap);\n        }\n        png.png(bitmap, stream);\n        result = Buffer.concat(stream.filter(Boolean));\n    }\n\n    return result;\n}\n\nfunction svg_object(text, options) {\n    options = get_options(options, 'svg');\n\n    var matrix = QR(text, options.ec_level);\n    return vector.svg_object(matrix, options.margin);\n}\n\nmodule.exports = {\n    matrix: QR,\n    image: qr_image,\n    imageSync: qr_image_sync,\n    svgObject: svg_object\n};\n", "const qr = require('qr-image');\n\nfunction createSepaQr (options = {}) {\n  const {\n    serviceTag = 'BCD',\n    version = '002',\n    characterSet = createSepaQr.UTF_8,\n    identification = 'SCT',\n    bic = '',\n    name = '',\n    iban,\n    amount = 0.01,\n    purpose = '',\n    remittance = '',\n    information = '',\n    ...qrOptions\n  } = options;\n\n  qrOptions.ec_level = 'M';\n\n  return qr.image(\n    [\n      serviceTag,\n      version,\n      characterSet,\n      identification,\n      bic,\n      name,\n      iban,\n      `EUR${amount}`,\n      purpose,\n      remittance,\n      information\n    ].join('\\n'),\n    qrOptions\n  );\n};\n\ncreateSepaQr.UTF_8 = 1;\ncreateSepaQr.ISO_8859_1 = 2;\ncreateSepaQr.ISO_8859_2 = 3;\ncreateSepaQr.ISO_8859_4 = 4;\ncreateSepaQr.ISO_8859_5 = 5;\ncreateSepaQr.ISO_8859_7 = 6;\ncreateSepaQr.ISO_8859_10 = 7;\ncreateSepaQr.ISO_8859_15 = 8;\n\nmodule.exports = createSepaQr;\n", "export default require(\"./node_modules/sepa-qr/index.js\");"],
  "mappings": "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",
  "names": []
}
